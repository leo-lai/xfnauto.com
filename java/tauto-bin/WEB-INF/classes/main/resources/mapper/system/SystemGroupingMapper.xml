<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="main.com.system.dao.po.SystemGrouping">

  <resultMap id="BaseResultMap" type="main.com.system.dao.vo.SystemGroupingVo">
    <id column="grouping_id" property="groupingId" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="seq" property="seq" jdbcType="INTEGER" />
    <result column="grouping_code" property="groupingCode" jdbcType="VARCHAR" />
    <result column="grouping_name" property="groupingName" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="over_delete" property="overDelete" jdbcType="TINYINT" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="BaseResultMapJoin" type="main.com.system.dao.vo.SystemGroupingVo">
    <id column="grouping_id" property="groupingId" jdbcType="INTEGER" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="seq" property="seq" jdbcType="INTEGER" />
    <result column="grouping_code" property="groupingCode" jdbcType="VARCHAR" />
    <result column="grouping_name" property="groupingName" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="over_delete" property="overDelete" jdbcType="TINYINT" />
    <result column="org_id" property="orgId" jdbcType="INTEGER" />
    <collection property="systemUserGroupingVos" ofType="main.com.system.dao.vo.SystemUserGroupingVo" column="grouping_id">
		<id column="user_grouping_id" property="userGroupingId" jdbcType="INTEGER" />
    	<result column="user_id" property="userId" jdbcType="INTEGER" />
    	<result column="grouping_id_user" property="groupingId" jdbcType="INTEGER" />
    	<result column="over_manage" property="overManage" jdbcType="TINYINT" />
    	<association property="usersVo" column="user_id" select="getUser"/>
 	</collection>
  </resultMap>
  
  <sql id="Base_Column_List" >
    system_grouping.grouping_id, system_grouping.parent_id, system_grouping.seq, system_grouping.grouping_code, 
    system_grouping.grouping_name, system_grouping.remarks, system_grouping.over_delete,system_grouping.org_id
  </sql>
  
  <sql id="Base_Column_List_Join" >
    system_grouping.grouping_id, system_grouping.parent_id, system_grouping.seq, system_grouping.grouping_code, 
    system_grouping.grouping_name, system_grouping.remarks, system_grouping.over_delete,system_grouping.org_id,
    system_user_grouping.user_grouping_id, system_user_grouping.user_id, system_user_grouping.grouping_id as grouping_id_user, system_user_grouping.over_manage
  </sql>
  
  <sql id="Where_Condition">
		<where>
			<trim prefixOverrides="and">
				<!-- 匹配查询 -->
				<if test="groupingId != null">and system_grouping.grouping_id = #{groupingId}</if>
				<if test="parentId != null">and system_grouping.parent_id = #{parentId}</if>
				<if test="1 == 1">and system_grouping.over_delete = 0</if>
				<if test="orgId != null">and system_grouping.org_id = #{orgId}</if>
				<if test="groupingName != null and groupingName != ''">and system_grouping.grouping_name like CONCAT('%',#{groupingName},'%')</if>
				<if test="orgCode != null and orgCode != null">and (system_grouping.org_id IN (select orgId from system_organization where system_organization.orgCodeLevel like
                    CONCAT('%',#{orgCode},'%')))
                </if>
				<!-- list查询 -->
				<if test="ids != null">and system_grouping.grouping_id in
                    <foreach item="item" index="index" collection="ids"
                             open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </if>
			</trim>
		</where>
	</sql>


	<!-- 查询总数 -->
	<select id="selectCount" resultType="java.lang.Long"
		parameterType="java.util.Map">
		select count(grouping_id) from system_grouping
		<include refid="Where_Condition" />
	</select>

	<!-- 查询 -->
	<select id="select" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from system_grouping
		<include refid="Where_Condition" />
		<if test="sortField != null"> order by seq desc </if>
		<if test="isPage== true and offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
	</select>
  
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from system_grouping
    where grouping_id = #{groupingId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByIdJoin" resultMap="BaseResultMapJoin" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List_Join" />
    from system_grouping left join system_user_grouping on system_grouping.grouping_id = system_user_grouping.grouping_id
    where system_grouping.grouping_id = #{groupingId,jdbcType=INTEGER}
  </select>
  
    <select id="getUser" parameterType="java.lang.Integer" resultType="main.com.system.dao.vo.SystemUsersVo">
	 	select 
		system_user.usersId,
		system_user.realName,
		system_user.phoneNumber
		FROM system_user
		where system_user.usersId = #{user_id}
    </select>
  
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from system_grouping
    where grouping_id = #{groupingId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="main.com.system.dao.po.SystemGrouping" useGeneratedKeys="true" keyProperty="groupingId" >
    insert into system_grouping
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="groupingCode != null" >
        grouping_code,
      </if>
      <if test="groupingName != null" >
        grouping_name,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="overDelete != null" >
        over_delete,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="groupingCode != null" >
        #{groupingCode,jdbcType=VARCHAR},
      </if>
      <if test="groupingName != null" >
        #{groupingName,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="overDelete != null" >
        #{overDelete,jdbcType=TINYINT},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=INTEGER},
      </if>      
    </trim>
  </insert>
  
  <update id="updateById" parameterType="main.com.system.dao.po.SystemGrouping" >
    update system_grouping
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="seq != null" >
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="groupingCode != null" >
        grouping_code = #{groupingCode,jdbcType=VARCHAR},
      </if>
      <if test="groupingName != null" >
        grouping_name = #{groupingName,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="overDelete != null" >
        over_delete = #{overDelete,jdbcType=TINYINT},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=TINYINT},
      </if>      
    </set>
    where grouping_id = #{groupingId,jdbcType=INTEGER}
  </update>
</mapper>